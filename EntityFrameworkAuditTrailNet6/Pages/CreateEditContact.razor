@page "/contact/create"
@page "/contact/edit/{id:int}"

<h3>CreateEditContact</h3>

@if (contact == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@contact" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row mb-3">
            <div class="col">
                <label for="FirstName" class="form-label">First Name</label>
                <InputText id="FirstName" @bind-Value="contact.FirstName" class="form-control" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label for="LastName" class="form-label">Last Name</label>
                <InputText id="LastName" @bind-Value="contact.LastName" class="form-control" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label for="DateOfBirth" class="form-label">Date of Birth</label>
                <InputDate id="DateOfBirth" @bind-Value="contact.DateOfBirth" class="form-control" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label for="Email" class="form-label">Email</label>
                <InputText id="Email" @bind-Value="contact.Email" class="form-control" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <label for="Phone" class="form-label">Phone</label>
                <InputText id="Phone" @bind-Value="contact.Phone" class="form-control" />
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    [Inject] IContactRepository contactRepository { get; set; } = default!;
    [Inject] NavigationManager navigationManager { get; set; } = default!;

    CreateEditContactDTO? contact = null;

    protected override async Task OnParametersSetAsync() =>
        contact = await contactRepository.GetCreateEditContactDTO(Id);

    private async Task HandleValidSubmit()
    {
        if (Id == 0)
            await contactRepository.CreateContact(contact);
        else
            await contactRepository.UpdateContact(contact);

        navigationManager.NavigateTo("contacts");
    }
}